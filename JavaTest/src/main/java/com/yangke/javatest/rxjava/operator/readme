###Rxjava的过滤操作符主要包括以下几种
* filter()：过滤数据。

* takeLast()：只发射最后的N项数据。

* last()：只发射最后一项数据。

* lastOrDefault()：只发射最后一项数据，如果Observable为空，就发射默认值。

* takeLastBuffer()：将最后的N项数据当作单个数据发射。

* skip()：跳过开始的N项数据。

* skipLast()：跳过最后的N项数据。

* take()：值发射开始的N项数据。

* first() and takeFirst()：只发射第一项数据，或者满足某种条件的第一项数据。

* firstOrDefault()：只发射第一项数据，如果Observable为空，就发射默认值。

* elementAt()：发射第N项数据。

* elementAtOrDefault()：发射第N项数据，如果Observable数据少于N项，就发射默认值。

* throttleFirst()：定期发射Observable发射的第一项数据。

* throttleWithTimeout() or debounce()：只有当Observable在指定的时间段后还没有发射数据时，才发射一个数据。

* timeout()：如果在一个指定的时间段后还没发射数据，就发射一个异常。

* distinct()：过滤掉重复的数据。

* distinctUntilChanged()：过滤掉连续重复的数据。

* ofType()：只发射指定类型的数据。

* ignoreElements()：丢弃所有的正常数据，只发射错误或完成通知。



#####条件操作符和布尔操作符

###Rxjava的条件操作符
* amb()：给定多个Observable，只让第一个发射数据的Observable发射全部数据。

* defaultIfEmpty()：发射来自原始Observable的数据，如果原始Observable没有发射数据，则发射一个默认数据。

* skipUntil()：丢弃原始Observable发射的数据，直到第二个Observable发射了一个数据，然后发射原始Observable的剩余
               数据。

* skipWhile()： 丢弃原始Observable发射的数据，直到一个特定的条件为假，然后发射原始Observable剩余的数据。

* takeUntil()：发射来自原始Observable的数据，直到第二个Observable发射了一个数据或一个通知。

* takeWhile() and takeWhileWithIndex()：发射原始Observable的数据，直到一个特定的条件为真，然后跳过剩余的数据

                                       。
###RxJava的布尔操作符
* all()：判断是否所有的数据项都满足条件。

* contains()：判断Observable是否会发射一个指定的值。

* exists() and isEmpty()：判断Observable是否发射了一个值。

* sequenceEqual()：判断链各个Observables发射的数据序列是否相等。